#import the pygame library and intalise the game engine
import pygame
import random
pygame.init()

#open a new window, caption it "Dino"
screen = pygame.display.set_mode((740, 480))

#heres the variables that runs our game loop
doExit = False

#the clock will be used to control how fast the screen updates
clock = pygame.time.Clock()
p1x = 25
p1y = 450
yVel = 0
touchground = False

CactusHeight=[80,40,20,80,30]

CactusXpos=[]#creates an empty list


for x in range (1, 5):
    CactusXpos.append(random.randrange(200, 3000))
    
CactusImg = pygame.image.load('cactus.png')

while not doExit:  #game loop-----------------------------------
   
   #event queuq stuff---------------
    clock.tick(60)#sets FPS
    
    for event in pygame.event.get(): #check if user did something
        if event.type == pygame.QUIT: #check is user clocked close
            doExit = True #Flag that we are doneso we exit game loop
    
    #timer section+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    
    #move cacti to the left
    CactusXpos = [x - 5 for x in CactusXpos]
    
    #reset cactus position to right of screen
    for x in range (len(CactusXpos)):
        if CactusXpos[x]<0:
            CactusXpos[x]=random.randrange(640,5000)
            print ("reset to", CactusXpos[x])#used for testing
    
    #checking for collision
    for x, y in zip(CactusXpos, CactusHeight):
        a = pygame.Rect((x, 480-y), (30, 80))
        b = pygame.Rect((p1x, p1y), (30, 80))
        if a.colliderect(b) == True:
            print("COLLISION")
    
    #update player position
    p1y += yVel
    
    
    #Turn off flying
    if (p1y+30) >= 480:
        touchGround = True
    else:
        touchGround = False
        
        #Gravity
    if touchGround == False:
        yVel += 1.5 #acceleration
    else:
        yVel = 0
        
    #input section+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    keys = pygame.key.get_pressed()
    if keys[pygame.K_w] and touchGround == True:
        yVel=-40
        print("trying to jump")
        
    #render section+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
    screen.fill((0, 0, 0))#wipe screen      
    pygame.draw.rect(screen, (255, 255, 255), (p1x, p1y, 25, 50), 25)
    
    #cactus
    for x, y in zip(CactusXpos, CactusHeight):
        screen.blit(CactusImg, (x-15,480-y))
    
   
   #update the screen
    pygame.display.flip()

#end of game loop----------
pygame.quit()#when game is done close down pygame          

           
       
        
